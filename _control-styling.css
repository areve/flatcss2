/* _control-styling.css */

:root {
  --controls__progress__color: var(--button-submit__background-color);
}

@mixin flat-button-styling() {
  @if $enable-styling {
    border-style: none;
    background-color: var(--button__background-color);
    color: var(--button__color);
    padding: var(--button__padding);
  }
}

@mixin validation-highlight($color: null) {
  @if $color == null {
    border-left-width: var(--border-width);
    border-left-color: var(--border-color);
    text-indent: calc(
      var(--control__validation--border-width) - var(--border-width)
    );
  } @else {
    border-left: var(--control__validation--border-width) solid;
    border-left-color: $color;
    text-indent: 0;
  }
}

@mixin background-icon() {
  background-repeat: no-repeat;
  background-size: 1em;
}

@mixin valid-background($opacity) {
  @include background-icon();
  background-color: var(--control__background-color);
  background-position: calc(100% - 0.5em) 0.5em;
}

@mixin invalid-background($opacity) {
  @include background-icon();
  background-color: var(--control__background-color);
  background-position: calc(100% - 0.5em) 0.5em;
}

@if $enable-styling {
  .flat {
    select,
    output,
    meter,
    textarea,
    input[type="checkbox"],
    input[type="radio"],
    input[type="text"],
    input[type="search"],
    input[type="range"],
    input[type="tel"],
    input[type="url"],
    input[type="color"],
    input[type="email"],
    input[type="password"],
    input[type="date"],
    input[type="month"],
    input[type="week"],
    input[type="time"],
    input[type="local"],
    input[type="number"],
    input[type="file"],
    input:not([type]) {
      border: var(--border);
      background-color: var(--control__background-color);
      color: var(--control__color);

      &[disabled] {
        background-color: var(--control__background-color--disabled);
        color: var(--control__color--disabled);
      }
      &[readonly] {
        background-color: var(--control__background-color--readonly);
        color: var(--control__color--readonly);
      }
    }

    textarea,
    input[type="date"],
    input[type="month"],
    input[type="week"],
    input[type="time"],
    input[type="number"],
    input[type="tel"],
    input[type="url"],
    input[type="text"],
    input[type="search"],
    input[type="email"],
    input[type="password"],
    input[type="local"],
    input:not([type]) {
      /* border-left: $control__validation--border-width solid; */
      &:optional {
        @include valid-background(0);
        background-image: var(--icon-validation--none);
        @include validation-highlight();
      }
      &[minlength],
      &[maxlength],
      &[max],
      &[min],
      &[pattern],
      &:required {
        @include validation-highlight(var(--success__color));
        @include valid-background(1);
        background-image: var(--icon-validation--valid);

        &:focus:valid {
          background-image: var(--icon-validation--valid-focus);
        }
        &:focus:invalid {
          @include invalid-background();

          background-image: var(--icon-validation--invalid-focus);
        }
      }
      &:invalid {
        @include validation-highlight(var(--error__color));
        @include invalid-background();
        background-image: var(--icon-validation--invalid);
      }
    }

    input[type="date"],
    input[type="month"],
    input[type="week"],
    input[type="time"],
    input[type="number"],
    input[type="search"] {
      &:optional {
        background-position: calc(100% - 2em) 0.5em;
      }
      &[minlength],
      &[maxlength],
      &[max],
      &[min],
      &[pattern],
      &:required {
        background-image: none;
        &:focus:valid {
          background-image: none;
        }
        &:focus:invalid {
          background-image: none;
        }
      }
      &:invalid {
        background-image: none;
      }
    }

    textarea,
    input[type="text"],
    input[type="search"],
    input[type="range"],
    input[type="tel"],
    input[type="url"],
    input[type="color"],
    input[type="email"],
    input[type="password"],
    input[type="local"],
    input[type="month"],
    input[type="week"],
    input[type="date"],
    input:not([type]) {
      width: var(--control__width);
    }

    input[type="time"],
    input[type="number"] {
      width: calc(var(--control__width) / 2);
    }

    input {
      &[type="file"] {
        border: none;
        padding: 0;
      }

      &[type="image"] {
        @if $enable-bustout-prevention {
          max-width: 100%;
          height: auto;
        }
        cursor: default;
        &:focus,
        &:active,
        &:hover:not([disabled]) {
          @include focus-highlight;
        }
        &[disabled] {
          filter: grayscale(85%);
        }
      }
    }

    output {
      @if $enable-semantic-colors {
        background-color: var(--output__background-color);
      }
    }

    textarea {
      display: block;
      height: 6em;
    }

    input[type="submit"],
    input[type="reset"],
    input[type="button"],
    .button,
    button {
      text-decoration: none;
      @include flat-button-styling;
      &:focus,
      &:active,
      &:hover:not([disabled]) {
        @include disabled-dim;
        text-decoration: none;
        cursor: default;
      }
    }

    input[type="button"],
    .button,
    button {
      &[disabled] {
        background-color: var(--button__background-color--disabled);
        color: var(--button__color--disabled);
      }
    }

    @if $enable-semantic-colors {
      /* button:not([type]):not(.standard):not(.negative), */
      button[type="submit"]:not(.standard):not(.negative),
      input[type="submit"]:not(.standard):not(.negative),
      .button.primary,
      button.primary,
      .button[type="reset"].primary,
      button[type="reset"].primary,
      input[type="reset"].primary,
      input[type="button"].primary {
        background-color: var(--button-submit__background-color);
        color: var(--button-submit__color);

        &[disabled] {
          background-color: var(--button-submit__background-color--disabled);
          color: var(--button-submit__color--disabled);
        }

        &:focus,
        &:active,
        &:hover:not([disabled]) {
          @include focus-highlight-strong;
        }
      }

      button[type="reset"]:not(.standard):not(.primary),
      input[type="reset"]:not(.standard):not(.primary),
      .button.negative,
      button.negative,
      input[type="submit"].negative,
      input[type="button"].negative {
        background-color: var(--button-reset__background-color);
        color: var(--button-reset__color);
        &[disabled] {
          background-color: var(--button-reset__background-color--disabled);
          color: var(--button-reset__color--disabled);
        }
        &:focus,
        &:active,
        &:hover:not([disabled]) {
          @include focus-highlight-strong;
        }
      }

      .button.normal,
      button.normal,
      input[type="reset"].button,
      input[type="submit"].button,
      input[type="button"].normal {
        background-color: var(--button__background-color);
        color: var(--button__color);
        &[disabled] {
          background-color: var(--button__background-color--disabled);
          color: var(--button__color--disabled);
        }
        &:focus,
        &:active,
        &:hover:not([disabled]) {
          @include disabled-dim;
        }
      }
    }

    input[type="checkbox"],
    input[type="radio"] {
      appearance: none;
      padding: 0;
      line-height: 0;
      border: 0;
      position: relative;
      top: calc(var(--control__height) * -1 / 16);
      &:before {
        position: absolute;
        content: " ";
        background-color: var(--control__background-color);
        display: inline-block;
        height: calc(var(--control__height) * 6 / 8);
        width: calc(var(--control__height) * 6 / 8);
        overflow: hidden;
        border: var(--border);
      }

      &:hover:not([disabled]):before {
        @include disabled-dim;
      }

      &[disabled]:before {
        background-color: var(--control__background-color--disabled);
      }
      &[readonly]:before {
        background-color: var(--control__background-color--readonly);
      }
    }

    input[type="checkbox"] {
      &::before {
        background-position: 50% 50%;
        @include background-icon();
        background-image: var(--icon-checkbox--unchecked);
      }
      &:required:before {
        @include background-icon();
        background-image: var(--icon-checkbox--unchecked-required);
      }
      &:checked::before {
        @include background-icon();
        background-image: var(--icon-checkbox--checked);
      }
      &:required:checked::before {
        @include background-icon();
        background-image: var(--icon-checkbox--checked-required);
      }
      &[disabled]:before {
        @include background-icon();
        background-image: var(--icon-checkbox--checked-disabled);
      }
      &[disabled]:required:before {
        @include background-icon();
        background-image: var(--icon-checkbox--checked-required-disabled);
      }
      &[readonly]:required:before {
        @include background-icon();
        background-image: var(--icon-checkbox--checked-required-readonly);
      }
    }

    input[type="radio"] {
      border-radius: 50%;
      &::before {
        border-radius: 50%;
        background-position: 50% 50%;
        @include background-icon();
        background-image: var(--icon-radio--unchecked);
      }
      /* I don't think it is possible to style */
      /* all radios red and turn them to white except for the checked one. */
      &:checked::before {
        @include background-icon();
        background-image: var(--icon-radio--checked);
      }
      &:required:checked:before {
        @include background-icon();
        background-image: var(--icon-radio--checked-required);
      }
      &[disabled]:before {
        @include background-icon();
        background-image: var(--icon-radio--disabled);
      }
      &[disabled]:required:before {
        @include background-icon();
        background-image: var(--icon-radio--required);
      }
      &[readonly]:required:before {
        @include background-icon();
        background-image: var(--icon-radio--required-readonly);
      }
    }

    input[type="color"] {
      -webkit-appearance: none;
      padding: 5px;
      width: calc(var(--control__height) * 15 / 16);
      height: calc(var(--control__height) * 15 / 16);
      background-color: var(--control__background-color);
      @media screen and (-webkit-min-device-pixel-ratio: 0) {
        /* set padding on ms and chrome */
        padding: 1px 3px;
      }
      &[disabled] {
        background-color: var(--control__background-color--disabled);
      }
      &[readonly] {
        background-color: var(--control__background-color--readonly);
      }
      &:focus,
      &:hover:not([disabled]):not([readonly]) {
        @include disabled-dim;
      }
    }

    input[type="range"] {
      appearance: none;
      height: var(--control__height);
      width: var(--control__width);
      /* for ms */
      background-color: var(--control__background-color);
      &[disabled],
      &[readonly] {
        opacity: 0.5;
      }
      &:active,
      &:hover:not([disabled]) {
        &::-webkit-slider-thumb {
          @include focus-highlight-strong;
        }
      }
      &::-webkit-slider-thumb {
        -webkit-appearance: none;
        background-color: var(--button-submit__background-color);
        height: calc(var(--control__height) * 6 / 8);
        width: calc(var(--control__height) * 6 / 8);
      }
      &::-moz-range-track {
        background-color: transparent;
        border: none;
      }
      &:active,
      &:hover:not([disabled]) {
        &::-moz-range-thumb {
          @include focus-highlight;
        }
      }
      &::-moz-range-thumb {
        background-color: var(--button-submit__background-color);
        border: none;
        height: calc(var(--control__height) * 6 / 8);
        width: calc(var(--control__height) * 6 / 8);
      }
      &::-ms-track {
        background-color: transparent;
        border: none;
        color: transparent;
      }
      &:active,
      &:hover:not([disabled]) {
        &::-ms-thumb {
          @include focus-highlight;
        }
      }
      &::-ms-thumb {
        appearance: none;
        background-color: var(--button-submit__background-color);
        height: calc(var(--control__height) * 0.6);
        width: calc(var(--control__height) * 0.6);
      }
      &::-ms-fill-lower {
        background-color: transparent;
        border: none;
      }
      &::-ms-fill-upper {
        background-color: transparent;
        border: none;
      }
    }

    progress {
      width: var(--control__width);
      appearance: none;
      padding: 0;
      /* ms uses this for color */
      color: var(--controls__progress__color);
      @media screen and (-webkit-min-device-pixel-ratio: 0) {
        /* ms and chrome add a border */
        border: none;
      }
      &[value]::-moz-progress-bar {
        background-color: var(--controls__progress__color);
      }
      &[value]::-webkit-progress-bar {
        background-color: var(--control__background-color);
        border: var(--border);
      }
      &[value]::-webkit-progress-value {
        background-color: var(--controls__progress__color);
      }
    }

    meter {
      /* custom styling of <meter> is not working chrome 69 */
      /* other browser support is not great either */
      /* due to a bug in chrome styling with none is not working */
      -webkit-appearance: meter;
      /* for ms and moz */
      border: 0;
      padding: 0px;
      /* background is being used as a border here because border does not work correctly */
      border-radius: 0;
      background-color: var(--border-color);
      width: var(--control__width);
    }

    select,
    select:not([multiple]):not([size]) {
      @include background-icon;
      background-image: var(--icon-select-arrow);
    }
    select {
      background-color: red;
      @include flat-button-styling;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      background-position: calc(100% - 0.5em) 50%;
      background-repeat: no-repeat;
      background-color: var(--button__background-color);
      padding-right: 2em;
      @include validation-highlight(transparent);
      &:active,
      &:hover:not([disabled]) {
        @include disabled-dim;
      }
      &[disabled] {
        background-color: var(--button__background-color--disabled);
        color: var(--button__color--disabled);
      }
      &:required {
        @include validation-highlight(var(--success__color));
      }
      &:invalid {
        @include validation-highlight(var(--error__color));
      }
    }

    input[type="file"] {
      &::-webkit-file-upload-button {
        @include flat-button-styling;
        position: relative;
        @include validation-highlight(transparent);
      }
      &:active::-webkit-file-upload-button,
      &:hover:not([disabled])::-webkit-file-upload-button {
        @include disabled-dim;
        text-decoration: none;
        cursor: default;
      }
      &[disabled]::-webkit-file-upload-button {
        cursor: not-allowed;
        background-color: var(--button__background-color--disabled);
        color: var(--button__color--disabled);
      }
      &:required::-webkit-file-upload-button {
        @include validation-highlight(var(--success__color));
      }
      &:invalid::-webkit-file-upload-button {
        @include validation-highlight(var(--error__color));
      }
    }
  }
}
